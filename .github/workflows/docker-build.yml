name: Build and Push Docker Image

on:
  push:
    branches: ["master"]
    tags: ["v*"]
  pull_request:
    branches: ["master"]
  workflow_dispatch:  # 新增手动触发入口
    inputs:
      environment:
        description: '部署环境 (prod/staging)'
        required: true
        default: 'staging'
      forceRebuild:
        description: '强制重建镜像 (true/false)'
        required: false
        default: 'false'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      # 新增步骤：显示手动触发参数
      - name: Show manual inputs
        if: ${{ github.event_name == 'workflow_dispatch' }}
        run: |
          echo "手动触发参数："
          echo "环境: ${{ github.event.inputs.environment }}"
          echo "强制重建: ${{ github.event.inputs.forceRebuild }}"

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}},event=tag
            type=semver,pattern={{major}}.{{minor}},event=tag
            type=sha,format=short
            type=raw,value=latest,enable=${{ startsWith(github.ref, 'refs/tags/v') }}

      # 新增条件：支持手动强制重建
      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: ${{ github.event.inputs.forceRebuild == 'false' && 'type=gha' || '' }}
          cache-to: ${{ github.event.inputs.forceRebuild == 'false' && 'type=gha,mode=max' || '' }}
